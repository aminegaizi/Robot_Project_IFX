	.file	"IfxStdIf_Pos.c"
.section .text,"ax",@progbits
.Ltext0:
.section .text.IfxStdIf_Pos_initConfig,"ax",@progbits
	.align 1
	.global	IfxStdIf_Pos_initConfig
	.type	IfxStdIf_Pos_initConfig, @function
IfxStdIf_Pos_initConfig:
.LFB42:
	.file 1 "0_Src/BaseSw/Service/CpuGeneric/StdIf/IfxStdIf_Pos.c"
	.loc 1 29 0
.LVL0:
	.loc 1 33 0
	mov	%d2, 1
	.loc 1 38 0
	movh	%d3, 17667
	.loc 1 30 0
	mov	%d15, 0
	.loc 1 33 0
	st.h	[%a4] 12, %d2
	.loc 1 34 0
	st.b	[%a4] 14, %d2
	.loc 1 35 0
	movh	%d2, 14979
	addi	%d2, %d2, 4719
	.loc 1 38 0
	addi	%d3, %d3, -6573
	.loc 1 30 0
	st.w	[%a4]0, %d15
	.loc 1 35 0
	st.w	[%a4] 16, %d2
	.loc 1 36 0
	mov	%d2, 0
	.loc 1 31 0
	st.b	[%a4] 4, %d15
	.loc 1 32 0
	st.w	[%a4] 8, %d15
	.loc 1 36 0
	st.w	[%a4] 20, %d2
	.loc 1 37 0
	st.w	[%a4] 24, %d2
	.loc 1 38 0
	st.w	[%a4] 28, %d3
	.loc 1 39 0
	st.b	[%a4] 32, %d15
	.loc 1 40 0
	st.w	[%a4] 36, %d2
	ret
.LFE42:
	.size	IfxStdIf_Pos_initConfig, .-IfxStdIf_Pos_initConfig
.section .rodata,"a",@progbits
.LC0:
	.string	"DSADC RDC status:\r\n"
.LC1:
	.string	"- Communication error\r\n"
.LC2:
	.string	"- Synchronization error\r\n"
.LC3:
	.string	"- Signal degradation error\r\n"
.LC4:
	.string	"- Signal loss error\r\n"
.LC5:
	.string	"- Tracking error\r\n"
.LC6:
	.string	"- Ready\r\n"
.section .text.IfxStdIf_Pos_printStatus,"ax",@progbits
	.align 1
	.global	IfxStdIf_Pos_printStatus
	.type	IfxStdIf_Pos_printStatus, @function
IfxStdIf_Pos_printStatus:
.LFB43:
	.loc 1 45 0
.LVL1:
.LBB4:
.LBB5:
	.file 2 "0_Src/BaseSw/Service/CpuGeneric/StdIf/IfxStdIf_Pos.h"
	.loc 2 336 0
	ld.a	%a2, [%a4] 24
	ld.a	%a4, [%a4]0
.LVL2:
.LBE5:
.LBE4:
	.loc 1 45 0
	mov.aa	%a15, %a5
.LBB8:
.LBB6:
	.loc 2 336 0
	calli	%a2
.LVL3:
.LBE6:
.LBE8:
	.loc 1 49 0
	movh.a	%a5, hi:.LC0
.LBB9:
.LBB7:
	.loc 2 336 0
	mov	%d15, %d2
.LVL4:
.LBE7:
.LBE9:
	.loc 1 49 0
	mov.aa	%a4, %a15
	lea	%a5, [%a5] lo:.LC0
	call	IfxStdIf_DPipe_print
.LVL5:
	.loc 1 50 0
	jz	%d15, .L3
	.loc 1 52 0
	jnz.t	%d15, 4, .L22
	.loc 1 56 0
	jnz.t	%d15, 0, .L23
.L5:
	.loc 1 60 0
	jnz.t	%d15, 2, .L24
.L6:
	.loc 1 64 0
	jnz.t	%d15, 1, .L25
.L7:
	.loc 1 68 0
	jnz.t	%d15, 3, .L26
.L2:
	ret
.L25:
	.loc 1 66 0
	movh.a	%a5, hi:.LC4
	mov.aa	%a4, %a15
	lea	%a5, [%a5] lo:.LC4
	call	IfxStdIf_DPipe_print
.LVL6:
	.loc 1 68 0
	jz.t	%d15, 3, .L2
.L26:
	.loc 1 70 0
	movh.a	%a5, hi:.LC5
	mov.aa	%a4, %a15
	lea	%a5, [%a5] lo:.LC5
	j	IfxStdIf_DPipe_print
.LVL7:
.L24:
	.loc 1 62 0
	movh.a	%a5, hi:.LC3
	mov.aa	%a4, %a15
	lea	%a5, [%a5] lo:.LC3
	call	IfxStdIf_DPipe_print
.LVL8:
	.loc 1 64 0
	jz.t	%d15, 1, .L7
	j	.L25
.L23:
	.loc 1 58 0
	movh.a	%a5, hi:.LC2
	mov.aa	%a4, %a15
	lea	%a5, [%a5] lo:.LC2
	call	IfxStdIf_DPipe_print
.LVL9:
	.loc 1 60 0
	jz.t	%d15, 2, .L6
	j	.L24
.L22:
	.loc 1 54 0
	movh.a	%a5, hi:.LC1
	mov.aa	%a4, %a15
	lea	%a5, [%a5] lo:.LC1
	call	IfxStdIf_DPipe_print
.LVL10:
	.loc 1 56 0
	jz.t	%d15, 0, .L5
	j	.L23
.LVL11:
.L3:
	.loc 1 75 0
	movh.a	%a5, hi:.LC6
	mov.aa	%a4, %a15
	lea	%a5, [%a5] lo:.LC6
	j	IfxStdIf_DPipe_print
.LVL12:
.LFE43:
	.size	IfxStdIf_Pos_printStatus, .-IfxStdIf_Pos_printStatus
.section .debug_frame,"",@progbits
.Lframe0:
	.uaword	.LECIE0-.LSCIE0
.LSCIE0:
	.uaword	0xffffffff
	.byte	0x3
	.string	""
	.uleb128 0x1
	.sleb128 1
	.uleb128 0x1b
	.byte	0xc
	.uleb128 0x1a
	.uleb128 0
	.align 2
.LECIE0:
.LSFDE0:
	.uaword	.LEFDE0-.LASFDE0
.LASFDE0:
	.uaword	.Lframe0
	.uaword	.LFB42
	.uaword	.LFE42-.LFB42
	.align 2
.LEFDE0:
.LSFDE2:
	.uaword	.LEFDE2-.LASFDE2
.LASFDE2:
	.uaword	.Lframe0
	.uaword	.LFB43
	.uaword	.LFE43-.LFB43
	.align 2
.LEFDE2:
.section .text,"ax",@progbits
.Letext0:
	.file 3 "0_Src/BaseSw/iLLD/TC27D/Tricore/Cpu/Std/Platform_Types.h"
	.file 4 "0_Src/BaseSw/iLLD/TC27D/Tricore/Cpu/Std/Ifx_Types.h"
	.file 5 "0_Src/BaseSw/Service/CpuGeneric/StdIf/IfxStdIf.h"
	.file 6 "0_Src/BaseSw/Service/CpuGeneric/StdIf/IfxStdIf_DPipe.h"
.section .debug_info,"",@progbits
.Ldebug_info0:
	.uaword	0x1346
	.uahalf	0x3
	.uaword	.Ldebug_abbrev0
	.byte	0x4
	.uleb128 0x1
	.string	"GNU C 4.9.4 build on 2018-04-18 -mlicense-dir=c:\\hightec\\toolchains\\tricore\\v4.9.1.0-infineon-2.0\\bin\\../lib/gcc/tricore/4.9.4/../../../../licenses -mtc161 -g -O2 -std=c99 -fno-common -fstrict-volatile-bitfields -ffunction-sections -fdata-sections"
	.byte	0x1
	.string	"0_Src/BaseSw/Service/CpuGeneric/StdIf/IfxStdIf_Pos.c"
	.string	"C:\\\\Aurix1G_Workspace_V1_0_1_7_0\\\\Copy (5) of BaseFramework_TC27D"
	.uaword	.Ldebug_ranges0+0x20
	.uaword	0
	.uaword	0
	.uaword	.Ldebug_line0
	.uleb128 0x2
	.byte	0x4
	.byte	0x5
	.string	"long int"
	.uleb128 0x2
	.byte	0x4
	.byte	0x7
	.string	"long unsigned int"
	.uleb128 0x2
	.byte	0x4
	.byte	0x5
	.string	"int"
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.string	"signed char"
	.uleb128 0x2
	.byte	0x1
	.byte	0x8
	.string	"unsigned char"
	.uleb128 0x3
	.string	"sint16"
	.byte	0x3
	.byte	0x5a
	.uaword	0x1e2
	.uleb128 0x2
	.byte	0x2
	.byte	0x5
	.string	"short int"
	.uleb128 0x3
	.string	"uint16"
	.byte	0x3
	.byte	0x5b
	.uaword	0x1fd
	.uleb128 0x2
	.byte	0x2
	.byte	0x7
	.string	"short unsigned int"
	.uleb128 0x3
	.string	"sint32"
	.byte	0x3
	.byte	0x5c
	.uaword	0x18c
	.uleb128 0x3
	.string	"uint32"
	.byte	0x3
	.byte	0x5d
	.uaword	0x198
	.uleb128 0x3
	.string	"float32"
	.byte	0x3
	.byte	0x5e
	.uaword	0x23e
	.uleb128 0x2
	.byte	0x4
	.byte	0x4
	.string	"float"
	.uleb128 0x2
	.byte	0x8
	.byte	0x4
	.string	"double"
	.uleb128 0x3
	.string	"boolean"
	.byte	0x3
	.byte	0x68
	.uaword	0x1c3
	.uleb128 0x3
	.string	"sint64"
	.byte	0x4
	.byte	0x24
	.uaword	0x26e
	.uleb128 0x2
	.byte	0x8
	.byte	0x5
	.string	"long long int"
	.uleb128 0x2
	.byte	0x8
	.byte	0x7
	.string	"long long unsigned int"
	.uleb128 0x3
	.string	"pchar"
	.byte	0x4
	.byte	0x27
	.uaword	0x2a6
	.uleb128 0x4
	.byte	0x4
	.uaword	0x2ac
	.uleb128 0x5
	.uaword	0x2b1
	.uleb128 0x2
	.byte	0x1
	.byte	0x6
	.string	"char"
	.uleb128 0x6
	.byte	0x4
	.uleb128 0x3
	.string	"Ifx_TickTime"
	.byte	0x4
	.byte	0x3d
	.uaword	0x260
	.uleb128 0x3
	.string	"Ifx_SizeT"
	.byte	0x4
	.byte	0x4a
	.uaword	0x1d4
	.uleb128 0x3
	.string	"IfxStdIf_InterfaceDriver"
	.byte	0x5
	.byte	0x61
	.uaword	0x2b9
	.uleb128 0x3
	.string	"IfxStdIf_DPipe"
	.byte	0x6
	.byte	0x33
	.uaword	0x316
	.uleb128 0x7
	.string	"IfxStdIf_DPipe_"
	.byte	0x4c
	.byte	0x6
	.byte	0xd5
	.uaword	0x492
	.uleb128 0x8
	.uaword	.LASF0
	.byte	0x6
	.byte	0xd7
	.uaword	0x2e0
	.byte	0
	.uleb128 0x9
	.string	"txDisabled"
	.byte	0x6
	.byte	0xd8
	.uaword	0x251
	.byte	0x4
	.uleb128 0x9
	.string	"write"
	.byte	0x6
	.byte	0xdb
	.uaword	0x4de
	.byte	0x8
	.uleb128 0x9
	.string	"read"
	.byte	0x6
	.byte	0xdc
	.uaword	0x525
	.byte	0xc
	.uleb128 0x9
	.string	"getReadCount"
	.byte	0x6
	.byte	0xdd
	.uaword	0x540
	.byte	0x10
	.uleb128 0x9
	.string	"getReadEvent"
	.byte	0x6
	.byte	0xde
	.uaword	0x579
	.byte	0x14
	.uleb128 0x9
	.string	"getWriteCount"
	.byte	0x6
	.byte	0xdf
	.uaword	0x626
	.byte	0x18
	.uleb128 0x9
	.string	"getWriteEvent"
	.byte	0x6
	.byte	0xe0
	.uaword	0x64a
	.byte	0x1c
	.uleb128 0x9
	.string	"canReadCount"
	.byte	0x6
	.byte	0xe1
	.uaword	0x684
	.byte	0x20
	.uleb128 0x9
	.string	"canWriteCount"
	.byte	0x6
	.byte	0xe2
	.uaword	0x6c7
	.byte	0x24
	.uleb128 0x9
	.string	"flushTx"
	.byte	0x6
	.byte	0xe3
	.uaword	0x6eb
	.byte	0x28
	.uleb128 0x9
	.string	"clearTx"
	.byte	0x6
	.byte	0xe4
	.uaword	0x754
	.byte	0x2c
	.uleb128 0x9
	.string	"clearRx"
	.byte	0x6
	.byte	0xe5
	.uaword	0x724
	.byte	0x30
	.uleb128 0x9
	.string	"onReceive"
	.byte	0x6
	.byte	0xe6
	.uaword	0x772
	.byte	0x34
	.uleb128 0x9
	.string	"onTransmit"
	.byte	0x6
	.byte	0xe7
	.uaword	0x792
	.byte	0x38
	.uleb128 0x9
	.string	"onError"
	.byte	0x6
	.byte	0xe8
	.uaword	0x7b3
	.byte	0x3c
	.uleb128 0x9
	.string	"getSendCount"
	.byte	0x6
	.byte	0xea
	.uaword	0x5b2
	.byte	0x40
	.uleb128 0x9
	.string	"getTxTimeStamp"
	.byte	0x6
	.byte	0xeb
	.uaword	0x5eb
	.byte	0x44
	.uleb128 0x9
	.string	"resetSendCount"
	.byte	0x6
	.byte	0xec
	.uaword	0x7d1
	.byte	0x48
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_WriteEvent"
	.byte	0x6
	.byte	0x35
	.uaword	0x4b3
	.uleb128 0x4
	.byte	0x4
	.uaword	0x4b9
	.uleb128 0xa
	.uaword	0x251
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_ReadEvent"
	.byte	0x6
	.byte	0x36
	.uaword	0x4b3
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_Write"
	.byte	0x6
	.byte	0x48
	.uaword	0x4fa
	.uleb128 0x4
	.byte	0x4
	.uaword	0x500
	.uleb128 0xb
	.byte	0x1
	.uaword	0x251
	.uaword	0x51f
	.uleb128 0xc
	.uaword	0x2e0
	.uleb128 0xc
	.uaword	0x2b9
	.uleb128 0xc
	.uaword	0x51f
	.uleb128 0xc
	.uaword	0x2bb
	.byte	0
	.uleb128 0x4
	.byte	0x4
	.uaword	0x2cf
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_Read"
	.byte	0x6
	.byte	0x57
	.uaword	0x4fa
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_GetReadCount"
	.byte	0x6
	.byte	0x5f
	.uaword	0x563
	.uleb128 0x4
	.byte	0x4
	.uaword	0x569
	.uleb128 0xb
	.byte	0x1
	.uaword	0x213
	.uaword	0x579
	.uleb128 0xc
	.uaword	0x2e0
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_GetReadEvent"
	.byte	0x6
	.byte	0x67
	.uaword	0x59c
	.uleb128 0x4
	.byte	0x4
	.uaword	0x5a2
	.uleb128 0xb
	.byte	0x1
	.uaword	0x4be
	.uaword	0x5b2
	.uleb128 0xc
	.uaword	0x2e0
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_GetSendCount"
	.byte	0x6
	.byte	0x6f
	.uaword	0x5d5
	.uleb128 0x4
	.byte	0x4
	.uaword	0x5db
	.uleb128 0xb
	.byte	0x1
	.uaword	0x221
	.uaword	0x5eb
	.uleb128 0xc
	.uaword	0x2e0
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_GetTxTimeStamp"
	.byte	0x6
	.byte	0x77
	.uaword	0x610
	.uleb128 0x4
	.byte	0x4
	.uaword	0x616
	.uleb128 0xb
	.byte	0x1
	.uaword	0x2bb
	.uaword	0x626
	.uleb128 0xc
	.uaword	0x2e0
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_GetWriteCount"
	.byte	0x6
	.byte	0x7f
	.uaword	0x563
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_GetWriteEvent"
	.byte	0x6
	.byte	0x87
	.uaword	0x66e
	.uleb128 0x4
	.byte	0x4
	.uaword	0x674
	.uleb128 0xb
	.byte	0x1
	.uaword	0x492
	.uaword	0x684
	.uleb128 0xc
	.uaword	0x2e0
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_CanReadCount"
	.byte	0x6
	.byte	0x92
	.uaword	0x6a7
	.uleb128 0x4
	.byte	0x4
	.uaword	0x6ad
	.uleb128 0xb
	.byte	0x1
	.uaword	0x251
	.uaword	0x6c7
	.uleb128 0xc
	.uaword	0x2e0
	.uleb128 0xc
	.uaword	0x2cf
	.uleb128 0xc
	.uaword	0x2bb
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_CanWriteCount"
	.byte	0x6
	.byte	0x9d
	.uaword	0x6a7
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_FlushTx"
	.byte	0x6
	.byte	0xa6
	.uaword	0x709
	.uleb128 0x4
	.byte	0x4
	.uaword	0x70f
	.uleb128 0xb
	.byte	0x1
	.uaword	0x251
	.uaword	0x724
	.uleb128 0xc
	.uaword	0x2e0
	.uleb128 0xc
	.uaword	0x2bb
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_ClearRx"
	.byte	0x6
	.byte	0xad
	.uaword	0x742
	.uleb128 0x4
	.byte	0x4
	.uaword	0x748
	.uleb128 0xd
	.byte	0x1
	.uaword	0x754
	.uleb128 0xc
	.uaword	0x2e0
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_ClearTx"
	.byte	0x6
	.byte	0xb4
	.uaword	0x742
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_OnReceive"
	.byte	0x6
	.byte	0xbc
	.uaword	0x742
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_OnTransmit"
	.byte	0x6
	.byte	0xc3
	.uaword	0x742
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_OnError"
	.byte	0x6
	.byte	0xca
	.uaword	0x742
	.uleb128 0x3
	.string	"IfxStdIf_DPipe_ResetSendCount"
	.byte	0x6
	.byte	0xd1
	.uaword	0x742
	.uleb128 0xe
	.byte	0x1
	.byte	0x2
	.byte	0x39
	.uaword	0x878
	.uleb128 0xf
	.string	"IfxStdIf_Pos_ResolutionFactor_oneFold"
	.sleb128 1
	.uleb128 0xf
	.string	"IfxStdIf_Pos_ResolutionFactor_twoFold"
	.sleb128 2
	.uleb128 0xf
	.string	"IfxStdIf_Pos_ResolutionFactor_fourFold"
	.sleb128 4
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_Pos_ResolutionFactor"
	.byte	0x2
	.byte	0x3d
	.uaword	0x7f6
	.uleb128 0xe
	.byte	0x1
	.byte	0x2
	.byte	0x41
	.uaword	0x96e
	.uleb128 0xf
	.string	"IfxStdIf_Pos_SensorType_encoder"
	.sleb128 0
	.uleb128 0xf
	.string	"IfxStdIf_Pos_SensorType_hall"
	.sleb128 1
	.uleb128 0xf
	.string	"IfxStdIf_Pos_SensorType_resolver"
	.sleb128 2
	.uleb128 0xf
	.string	"IfxStdIf_Pos_SensorType_angletrk"
	.sleb128 3
	.uleb128 0xf
	.string	"IfxStdIf_Pos_SensorType_igmr"
	.sleb128 4
	.uleb128 0xf
	.string	"IfxStdIf_Pos_SensorType_virtual"
	.sleb128 5
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_Pos_SensorType"
	.byte	0x2
	.byte	0x48
	.uaword	0x89d
	.uleb128 0xe
	.byte	0x1
	.byte	0x2
	.byte	0x4c
	.uaword	0x9e8
	.uleb128 0xf
	.string	"IfxStdIf_Pos_Dir_forward"
	.sleb128 0
	.uleb128 0xf
	.string	"IfxStdIf_Pos_Dir_backward"
	.sleb128 1
	.uleb128 0xf
	.string	"IfxStdIf_Pos_Dir_unknown"
	.sleb128 2
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_Pos_Dir"
	.byte	0x2
	.byte	0x50
	.uaword	0x98d
	.uleb128 0x10
	.byte	0x1
	.byte	0x2
	.byte	0x56
	.uaword	0xa84
	.uleb128 0x11
	.string	"notSynchronised"
	.byte	0x2
	.byte	0x58
	.uaword	0x221
	.byte	0x4
	.byte	0x1
	.byte	0x1f
	.byte	0
	.uleb128 0x11
	.string	"signalLoss"
	.byte	0x2
	.byte	0x59
	.uaword	0x221
	.byte	0x4
	.byte	0x1
	.byte	0x1e
	.byte	0
	.uleb128 0x11
	.string	"signalDegradation"
	.byte	0x2
	.byte	0x5a
	.uaword	0x221
	.byte	0x4
	.byte	0x1
	.byte	0x1d
	.byte	0
	.uleb128 0x11
	.string	"trackingLoss"
	.byte	0x2
	.byte	0x5b
	.uaword	0x221
	.byte	0x4
	.byte	0x1
	.byte	0x1c
	.byte	0
	.uleb128 0x11
	.string	"commError"
	.byte	0x2
	.byte	0x5c
	.uaword	0x221
	.byte	0x4
	.byte	0x1
	.byte	0x1b
	.byte	0
	.byte	0
	.uleb128 0x12
	.byte	0x4
	.byte	0x2
	.byte	0x53
	.uaword	0xaa4
	.uleb128 0x13
	.string	"status"
	.byte	0x2
	.byte	0x55
	.uaword	0x221
	.uleb128 0x13
	.string	"B"
	.byte	0x2
	.byte	0x5d
	.uaword	0xa00
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_Pos_Status"
	.byte	0x2
	.byte	0x5e
	.uaword	0xa84
	.uleb128 0x3
	.string	"IfxStdIf_Pos"
	.byte	0x2
	.byte	0x63
	.uaword	0xad3
	.uleb128 0x14
	.string	"IfxStdIf_Pos_"
	.byte	0x5c
	.byte	0x2
	.uahalf	0x10a
	.uaword	0xccb
	.uleb128 0x15
	.uaword	.LASF0
	.byte	0x2
	.uahalf	0x10c
	.uaword	0x2e0
	.byte	0
	.uleb128 0x16
	.string	"onZeroIrq"
	.byte	0x2
	.uahalf	0x10d
	.uaword	0xd09
	.byte	0x4
	.uleb128 0x16
	.string	"getAbsolutePosition"
	.byte	0x2
	.uahalf	0x10e
	.uaword	0xccb
	.byte	0x8
	.uleb128 0x16
	.string	"getOffset"
	.byte	0x2
	.uahalf	0x10f
	.uaword	0xd27
	.byte	0xc
	.uleb128 0x16
	.string	"getPosition"
	.byte	0x2
	.uahalf	0x110
	.uaword	0xd45
	.byte	0x10
	.uleb128 0x16
	.string	"getDirection"
	.byte	0x2
	.uahalf	0x111
	.uaword	0xd65
	.byte	0x14
	.uleb128 0x16
	.string	"getFault"
	.byte	0x2
	.uahalf	0x112
	.uaword	0xd9c
	.byte	0x18
	.uleb128 0x16
	.string	"getRawPosition"
	.byte	0x2
	.uahalf	0x113
	.uaword	0xe0e
	.byte	0x1c
	.uleb128 0x16
	.string	"getPeriodPerRotation"
	.byte	0x2
	.uahalf	0x114
	.uaword	0xdcf
	.byte	0x20
	.uleb128 0x16
	.string	"getRefreshPeriod"
	.byte	0x2
	.uahalf	0x115
	.uaword	0xe31
	.byte	0x24
	.uleb128 0x16
	.string	"getResolution"
	.byte	0x2
	.uahalf	0x116
	.uaword	0xe56
	.byte	0x28
	.uleb128 0x16
	.string	"getSensorType"
	.byte	0x2
	.uahalf	0x117
	.uaword	0xe78
	.byte	0x2c
	.uleb128 0x16
	.string	"getTurn"
	.byte	0x2
	.uahalf	0x118
	.uaword	0xecd
	.byte	0x30
	.uleb128 0x16
	.string	"onEventA"
	.byte	0x2
	.uahalf	0x119
	.uaword	0xee9
	.byte	0x34
	.uleb128 0x16
	.string	"reset"
	.byte	0x2
	.uahalf	0x11a
	.uaword	0xf21
	.byte	0x38
	.uleb128 0x16
	.string	"resetFaults"
	.byte	0x2
	.uahalf	0x11b
	.uaword	0xf3b
	.byte	0x3c
	.uleb128 0x16
	.string	"getSpeed"
	.byte	0x2
	.uahalf	0x11c
	.uaword	0xeb0
	.byte	0x40
	.uleb128 0x16
	.string	"update"
	.byte	0x2
	.uahalf	0x11d
	.uaword	0xf06
	.byte	0x44
	.uleb128 0x16
	.string	"setOffset"
	.byte	0x2
	.uahalf	0x11e
	.uaword	0xf5b
	.byte	0x48
	.uleb128 0x16
	.string	"setPosition"
	.byte	0x2
	.uahalf	0x11f
	.uaword	0xf90
	.byte	0x4c
	.uleb128 0x16
	.string	"setRawPosition"
	.byte	0x2
	.uahalf	0x120
	.uaword	0xfc7
	.byte	0x50
	.uleb128 0x16
	.string	"setSpeed"
	.byte	0x2
	.uahalf	0x121
	.uaword	0xfea
	.byte	0x54
	.uleb128 0x16
	.string	"setRefreshPeriod"
	.byte	0x2
	.uahalf	0x122
	.uaword	0x1007
	.byte	0x58
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_Pos_GetAbsolutePosition"
	.byte	0x2
	.byte	0x6d
	.uaword	0xcf3
	.uleb128 0x4
	.byte	0x4
	.uaword	0xcf9
	.uleb128 0xb
	.byte	0x1
	.uaword	0x22f
	.uaword	0xd09
	.uleb128 0xc
	.uaword	0x2e0
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_Pos_OnZeroIrq"
	.byte	0x2
	.byte	0x73
	.uaword	0x742
	.uleb128 0x3
	.string	"IfxStdIf_Pos_GetOffset"
	.byte	0x2
	.byte	0x7a
	.uaword	0x563
	.uleb128 0x3
	.string	"IfxStdIf_Pos_GetPosition"
	.byte	0x2
	.byte	0x84
	.uaword	0xcf3
	.uleb128 0x3
	.string	"IfxStdIf_Pos_GetDirection"
	.byte	0x2
	.byte	0x8d
	.uaword	0xd86
	.uleb128 0x4
	.byte	0x4
	.uaword	0xd8c
	.uleb128 0xb
	.byte	0x1
	.uaword	0x9e8
	.uaword	0xd9c
	.uleb128 0xc
	.uaword	0x2e0
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_Pos_GetFault"
	.byte	0x2
	.byte	0x94
	.uaword	0xdb9
	.uleb128 0x4
	.byte	0x4
	.uaword	0xdbf
	.uleb128 0xb
	.byte	0x1
	.uaword	0xaa4
	.uaword	0xdcf
	.uleb128 0xc
	.uaword	0x2e0
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_Pos_GetPeriodPerRotation"
	.byte	0x2
	.byte	0x9b
	.uaword	0xdf8
	.uleb128 0x4
	.byte	0x4
	.uaword	0xdfe
	.uleb128 0xb
	.byte	0x1
	.uaword	0x1ef
	.uaword	0xe0e
	.uleb128 0xc
	.uaword	0x2e0
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_Pos_GetRawPosition"
	.byte	0x2
	.byte	0xa4
	.uaword	0x563
	.uleb128 0x3
	.string	"IfxStdIf_Pos_GetRefreshPeriod"
	.byte	0x2
	.byte	0xaa
	.uaword	0xcf3
	.uleb128 0x3
	.string	"IfxStdIf_Pos_GetResolution"
	.byte	0x2
	.byte	0xb0
	.uaword	0x563
	.uleb128 0x3
	.string	"IfxStdIf_Pos_GetSensorType"
	.byte	0x2
	.byte	0xb6
	.uaword	0xe9a
	.uleb128 0x4
	.byte	0x4
	.uaword	0xea0
	.uleb128 0xb
	.byte	0x1
	.uaword	0x96e
	.uaword	0xeb0
	.uleb128 0xc
	.uaword	0x2e0
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_Pos_GetSpeed"
	.byte	0x2
	.byte	0xbc
	.uaword	0xcf3
	.uleb128 0x3
	.string	"IfxStdIf_Pos_GetTurn"
	.byte	0x2
	.byte	0xc2
	.uaword	0x563
	.uleb128 0x3
	.string	"IfxStdIf_Pos_OnEventA"
	.byte	0x2
	.byte	0xc9
	.uaword	0x742
	.uleb128 0x3
	.string	"IfxStdIf_Pos_Update"
	.byte	0x2
	.byte	0xd2
	.uaword	0x742
	.uleb128 0x3
	.string	"IfxStdIf_Pos_Reset"
	.byte	0x2
	.byte	0xdb
	.uaword	0x742
	.uleb128 0x3
	.string	"IfxStdIf_Pos_ResetFaults"
	.byte	0x2
	.byte	0xe4
	.uaword	0x742
	.uleb128 0x3
	.string	"IfxStdIf_Pos_SetOffset"
	.byte	0x2
	.byte	0xeb
	.uaword	0xf79
	.uleb128 0x4
	.byte	0x4
	.uaword	0xf7f
	.uleb128 0xd
	.byte	0x1
	.uaword	0xf90
	.uleb128 0xc
	.uaword	0x2e0
	.uleb128 0xc
	.uaword	0x213
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_Pos_SetPosition"
	.byte	0x2
	.byte	0xf2
	.uaword	0xfb0
	.uleb128 0x4
	.byte	0x4
	.uaword	0xfb6
	.uleb128 0xd
	.byte	0x1
	.uaword	0xfc7
	.uleb128 0xc
	.uaword	0x2e0
	.uleb128 0xc
	.uaword	0x22f
	.byte	0
	.uleb128 0x3
	.string	"IfxStdIf_Pos_SetRawPosition"
	.byte	0x2
	.byte	0xf8
	.uaword	0xf79
	.uleb128 0x3
	.string	"IfxStdIf_Pos_SetSpeed"
	.byte	0x2
	.byte	0xff
	.uaword	0xfb0
	.uleb128 0x17
	.string	"IfxStdIf_Pos_SetRefreshPeriod"
	.byte	0x2
	.uahalf	0x106
	.uaword	0xfb0
	.uleb128 0x18
	.byte	0x28
	.byte	0x2
	.uahalf	0x126
	.uaword	0x1137
	.uleb128 0x16
	.string	"offset"
	.byte	0x2
	.uahalf	0x128
	.uaword	0x213
	.byte	0
	.uleb128 0x16
	.string	"reversed"
	.byte	0x2
	.uahalf	0x129
	.uaword	0x251
	.byte	0x4
	.uleb128 0x16
	.string	"resolution"
	.byte	0x2
	.uahalf	0x12a
	.uaword	0x213
	.byte	0x8
	.uleb128 0x16
	.string	"periodPerRotation"
	.byte	0x2
	.uahalf	0x12b
	.uaword	0x1ef
	.byte	0xc
	.uleb128 0x16
	.string	"resolutionFactor"
	.byte	0x2
	.uahalf	0x12c
	.uaword	0x878
	.byte	0xe
	.uleb128 0x16
	.string	"updatePeriod"
	.byte	0x2
	.uahalf	0x12d
	.uaword	0x22f
	.byte	0x10
	.uleb128 0x16
	.string	"speedModeThreshold"
	.byte	0x2
	.uahalf	0x12e
	.uaword	0x22f
	.byte	0x14
	.uleb128 0x16
	.string	"minSpeed"
	.byte	0x2
	.uahalf	0x12f
	.uaword	0x22f
	.byte	0x18
	.uleb128 0x16
	.string	"maxSpeed"
	.byte	0x2
	.uahalf	0x130
	.uaword	0x22f
	.byte	0x1c
	.uleb128 0x16
	.string	"speedFilterEnabled"
	.byte	0x2
	.uahalf	0x131
	.uaword	0x251
	.byte	0x20
	.uleb128 0x16
	.string	"speedFilerCutOffFrequency"
	.byte	0x2
	.uahalf	0x132
	.uaword	0x22f
	.byte	0x24
	.byte	0
	.uleb128 0x17
	.string	"IfxStdIf_Pos_Config"
	.byte	0x2
	.uahalf	0x133
	.uaword	0x102d
	.uleb128 0x19
	.string	"IfxStdIf_Pos_getFault"
	.byte	0x2
	.uahalf	0x14e
	.byte	0x1
	.uaword	0xaa4
	.byte	0x3
	.uaword	0x1186
	.uleb128 0x1a
	.string	"stdIf"
	.byte	0x2
	.uahalf	0x14e
	.uaword	0x1186
	.byte	0
	.uleb128 0x4
	.byte	0x4
	.uaword	0xabf
	.uleb128 0x1b
	.byte	0x1
	.string	"IfxStdIf_Pos_initConfig"
	.byte	0x1
	.byte	0x1c
	.byte	0x1
	.uaword	.LFB42
	.uaword	.LFE42
	.byte	0x1
	.byte	0x9c
	.byte	0x1
	.uaword	0x11c9
	.uleb128 0x1c
	.string	"config"
	.byte	0x1
	.byte	0x1c
	.uaword	0x11c9
	.byte	0x1
	.byte	0x64
	.byte	0
	.uleb128 0x4
	.byte	0x4
	.uaword	0x1137
	.uleb128 0x1d
	.byte	0x1
	.string	"IfxStdIf_Pos_printStatus"
	.byte	0x1
	.byte	0x2c
	.byte	0x1
	.uaword	.LFB43
	.uaword	.LFE43
	.byte	0x1
	.byte	0x9c
	.byte	0x1
	.uaword	0x131b
	.uleb128 0x1e
	.uaword	.LASF0
	.byte	0x1
	.byte	0x2c
	.uaword	0x1186
	.uaword	.LLST0
	.uleb128 0x1f
	.string	"io"
	.byte	0x1
	.byte	0x2c
	.uaword	0x131b
	.uaword	.LLST1
	.uleb128 0x20
	.string	"status"
	.byte	0x1
	.byte	0x2e
	.uaword	0xaa4
	.uaword	.LLST2
	.uleb128 0x21
	.uaword	0x1153
	.uaword	.LBB4
	.uaword	.Ldebug_ranges0+0
	.byte	0x1
	.byte	0x2f
	.uaword	0x1251
	.uleb128 0x22
	.uaword	0x1177
	.uaword	.LLST0
	.uleb128 0x22
	.uaword	0x1177
	.uaword	.LLST0
	.byte	0
	.uleb128 0x23
	.uaword	.LVL5
	.uaword	0x1321
	.uaword	0x126e
	.uleb128 0x24
	.byte	0x1
	.byte	0x65
	.byte	0x5
	.byte	0x3
	.uaword	.LC0
	.uleb128 0x24
	.byte	0x1
	.byte	0x64
	.byte	0x2
	.byte	0x8f
	.sleb128 0
	.byte	0
	.uleb128 0x23
	.uaword	.LVL6
	.uaword	0x1321
	.uaword	0x128b
	.uleb128 0x24
	.byte	0x1
	.byte	0x65
	.byte	0x5
	.byte	0x3
	.uaword	.LC4
	.uleb128 0x24
	.byte	0x1
	.byte	0x64
	.byte	0x2
	.byte	0x8f
	.sleb128 0
	.byte	0
	.uleb128 0x25
	.uaword	.LVL7
	.byte	0x1
	.uaword	0x1321
	.uaword	0x12a9
	.uleb128 0x24
	.byte	0x1
	.byte	0x65
	.byte	0x5
	.byte	0x3
	.uaword	.LC5
	.uleb128 0x24
	.byte	0x1
	.byte	0x64
	.byte	0x2
	.byte	0x8f
	.sleb128 0
	.byte	0
	.uleb128 0x23
	.uaword	.LVL8
	.uaword	0x1321
	.uaword	0x12c6
	.uleb128 0x24
	.byte	0x1
	.byte	0x65
	.byte	0x5
	.byte	0x3
	.uaword	.LC3
	.uleb128 0x24
	.byte	0x1
	.byte	0x64
	.byte	0x2
	.byte	0x8f
	.sleb128 0
	.byte	0
	.uleb128 0x23
	.uaword	.LVL9
	.uaword	0x1321
	.uaword	0x12e3
	.uleb128 0x24
	.byte	0x1
	.byte	0x65
	.byte	0x5
	.byte	0x3
	.uaword	.LC2
	.uleb128 0x24
	.byte	0x1
	.byte	0x64
	.byte	0x2
	.byte	0x8f
	.sleb128 0
	.byte	0
	.uleb128 0x23
	.uaword	.LVL10
	.uaword	0x1321
	.uaword	0x1300
	.uleb128 0x24
	.byte	0x1
	.byte	0x65
	.byte	0x5
	.byte	0x3
	.uaword	.LC1
	.uleb128 0x24
	.byte	0x1
	.byte	0x64
	.byte	0x2
	.byte	0x8f
	.sleb128 0
	.byte	0
	.uleb128 0x26
	.uaword	.LVL12
	.byte	0x1
	.uaword	0x1321
	.uleb128 0x24
	.byte	0x1
	.byte	0x65
	.byte	0x5
	.byte	0x3
	.uaword	.LC6
	.uleb128 0x24
	.byte	0x1
	.byte	0x64
	.byte	0x2
	.byte	0x8f
	.sleb128 0
	.byte	0
	.byte	0
	.uleb128 0x4
	.byte	0x4
	.uaword	0x300
	.uleb128 0x27
	.byte	0x1
	.string	"IfxStdIf_DPipe_print"
	.byte	0x6
	.uahalf	0x178
	.byte	0x1
	.byte	0x1
	.uleb128 0xc
	.uaword	0x131b
	.uleb128 0xc
	.uaword	0x299
	.uleb128 0x28
	.byte	0
	.byte	0
.section .debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x25
	.uleb128 0x8
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1b
	.uleb128 0x8
	.uleb128 0x55
	.uleb128 0x6
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x52
	.uleb128 0x1
	.uleb128 0x10
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0x2
	.uleb128 0x24
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.byte	0
	.byte	0
	.uleb128 0x3
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x4
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x5
	.uleb128 0x26
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x6
	.uleb128 0xf
	.byte	0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x7
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x8
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x9
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0xa
	.uleb128 0x35
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xb
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xc
	.uleb128 0x5
	.byte	0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xd
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xe
	.uleb128 0x4
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0xf
	.uleb128 0x28
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0
	.byte	0
	.uleb128 0x10
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x11
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xd
	.uleb128 0xb
	.uleb128 0xc
	.uleb128 0xb
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x12
	.uleb128 0x17
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x13
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x14
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x15
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x16
	.uleb128 0xd
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xb
	.byte	0
	.byte	0
	.uleb128 0x17
	.uleb128 0x16
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x18
	.uleb128 0x13
	.byte	0x1
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x19
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x20
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1a
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0xa
	.uleb128 0x2117
	.uleb128 0xc
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1c
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0
	.byte	0
	.uleb128 0x1d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0xa
	.uleb128 0x2116
	.uleb128 0xc
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x1e
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0x1f
	.uleb128 0x5
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0x20
	.uleb128 0x34
	.byte	0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0x21
	.uleb128 0x1d
	.byte	0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x52
	.uleb128 0x1
	.uleb128 0x55
	.uleb128 0x6
	.uleb128 0x58
	.uleb128 0xb
	.uleb128 0x59
	.uleb128 0xb
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x22
	.uleb128 0x5
	.byte	0
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0x6
	.byte	0
	.byte	0
	.uleb128 0x23
	.uleb128 0x4109
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x24
	.uleb128 0x410a
	.byte	0
	.uleb128 0x2
	.uleb128 0xa
	.uleb128 0x2111
	.uleb128 0xa
	.byte	0
	.byte	0
	.uleb128 0x25
	.uleb128 0x4109
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x2115
	.uleb128 0xc
	.uleb128 0x31
	.uleb128 0x13
	.uleb128 0x1
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x26
	.uleb128 0x4109
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x2115
	.uleb128 0xc
	.uleb128 0x31
	.uleb128 0x13
	.byte	0
	.byte	0
	.uleb128 0x27
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x3c
	.uleb128 0xc
	.byte	0
	.byte	0
	.uleb128 0x28
	.uleb128 0x18
	.byte	0
	.byte	0
	.byte	0
	.byte	0
.section .debug_loc,"",@progbits
.Ldebug_loc0:
.LLST0:
	.uaword	.LVL1
	.uaword	.LVL2
	.uahalf	0x1
	.byte	0x64
	.uaword	.LVL2
	.uaword	.LFE43
	.uahalf	0x4
	.byte	0xf3
	.uleb128 0x1
	.byte	0x64
	.byte	0x9f
	.uaword	0
	.uaword	0
.LLST1:
	.uaword	.LVL1
	.uaword	.LVL3-1
	.uahalf	0x1
	.byte	0x65
	.uaword	.LVL3-1
	.uaword	.LFE43
	.uahalf	0x1
	.byte	0x6f
	.uaword	0
	.uaword	0
.LLST2:
	.uaword	.LVL4
	.uaword	.LVL5-1
	.uahalf	0x3
	.byte	0x52
	.byte	0x93
	.uleb128 0x4
	.uaword	.LVL5-1
	.uaword	.LVL11
	.uahalf	0x3
	.byte	0x5f
	.byte	0x93
	.uleb128 0x4
	.uaword	0
	.uaword	0
.section .debug_aranges,"",@progbits
	.uaword	0x24
	.uahalf	0x2
	.uaword	.Ldebug_info0
	.byte	0x4
	.byte	0
	.uahalf	0
	.uahalf	0
	.uaword	.LFB42
	.uaword	.LFE42-.LFB42
	.uaword	.LFB43
	.uaword	.LFE43-.LFB43
	.uaword	0
	.uaword	0
.section .debug_ranges,"",@progbits
.Ldebug_ranges0:
	.uaword	.LBB4
	.uaword	.LBE4
	.uaword	.LBB8
	.uaword	.LBE8
	.uaword	.LBB9
	.uaword	.LBE9
	.uaword	0
	.uaword	0
	.uaword	.LFB42
	.uaword	.LFE42
	.uaword	.LFB43
	.uaword	.LFE43
	.uaword	0
	.uaword	0
.section .debug_line,"",@progbits
.Ldebug_line0:
.section .debug_str,"",@progbits
.LASF0:
	.string	"driver"
	.extern	IfxStdIf_DPipe_print,STT_FUNC,0
	.ident	"GCC: (HighTec Release HDP-v4.9.1.0-infineon-2.0-df254e8) 4.9.4 build on 2018-04-18"
