/*
 * Beeper.c
 *
 *  Created on: 18.12.2018
 *      Author: Gaizi
 */

#include "Beeper.h"

IfxGtm_Tom_Timer Beeper;

sint32 Fsys = 0;
uint8 Duty_Cycle = 0;
int freqs[26] = {264, 264, 297, 264, 352, 330, 264, 264, 297, 264, 396, 352, 264, 264, 523, 440, 352, 352, 330, 297, 466, 466, 440, 352, 396, 352};
float length[26] = {4.0, 4.0, 1.0, 1.0, 1.0, 0.5, 4.0, 4.0, 1.0, 1.0, 1.0, 0.5, 4.0, 4.0, 1.0, 1.0, 2.0, 4.0, 1.0, 0.5, 4.0, 4.0, 1.0, 1.0, 1.0, 0.5};

float length2[] = {4.0, 4.0, 2.0, 2.0, 2.0, 1.0, 4.0, 4.0, 2.0, 2.0, 2.0, 1.0, 4.0, 4.0, 2.0, 2.0, 3.0, 4.0, 2.0, 1.0, 4.0, 4.0, 2.0, 2.0, 2.0, 1.0};
int current_freq = 0;
float current_len = 0;
uint8 i=0;

int f_sw1_1[9] = {440, 440, 440, 349, 523, 440, 349, 523, 440};
float len_sw1_1[9] = {2.0, 2.0, 2.0, 2.85, 6.66, 2.0, 2.85, 6.66, 1.56};

int f_sw1_2[9] = {659, 659, 659, 698, 523, 415, 349, 523, 440};

int f_sw_2_1[9] = {880, 440, 440, 880, 830, 415, 830, 698, 740};
float len_sw2_1[9] = {2.0, 3.33, 6.66, 2.0, 3.07, 5.71, 8.0, 8.0, 4.0};

int f_sw_2_2[7] = {455, 622, 587, 554, 523, 466, 523};
float len_sw2_2[7] = {4.0, 2.00, 3.07, 5.71, 8.00, 8.00, 4.0};

int f_sw3[8] = {349, 415, 349, 440, 523, 440, 523, 659};
int len_sw3[8] = {4.0, 2.0, 2.86, 6.66, 2.00, 2.66, 6.66, 1.56};

int f_sw4[8] = {349, 415, 349, 523, 440, 349, 523, 440};
int len_sw4[8] = {4.0, 2.0, 2.66, 6.66, 2.00, 2.66, 6.66, 1.56};

void happy_birthday()
{

	initTime();
	Duty_Cycle = 10;
	Fsys = IfxStm_getFrequency(BSP_DEFAULT_TIMER);

	for (i=0; i<26; i++)
	{
		current_freq = freqs[i];
		current_len = Fsys/length2[i];

		PWM_init(PWM_BEEPER, &Beeper, freqs[i]);
		PWM_setDuty(Beeper, Duty_Cycle);
		waitTime(Fsys/(2*length[i]));
		PWM_setDuty(Beeper, 0);
		IfxGtm_Tom_Timer_stop(&Beeper);
		waitTime(Fsys/4);
	}


	IfxGtm_Tom_Timer_stop(&Beeper);


}

void star_wars()
{
	initTime();
	Duty_Cycle = 10;
	Fsys = IfxStm_getFrequency(BSP_DEFAULT_TIMER);
	i = 0;

	for (i=0; i<9; i++)
	{

		PWM_init(PWM_BEEPER, &Beeper, f_sw1_1[i]);
		PWM_setDuty(Beeper, Duty_Cycle);
		waitTime(Fsys/(len_sw1_1[i]));
		PWM_setDuty(Beeper, 0);
		IfxGtm_Tom_Timer_stop(&Beeper);
		waitTime(Fsys/20);
	}

	IfxGtm_Tom_Timer_stop(&Beeper);
	waitTime(Fsys/2);

	for (i=0; i<9; i++)
	{

		PWM_init(PWM_BEEPER, &Beeper, f_sw1_2[i]);
		PWM_setDuty(Beeper, Duty_Cycle);
		waitTime(Fsys/(len_sw1_1[i]));
		PWM_setDuty(Beeper, 0);
		IfxGtm_Tom_Timer_stop(&Beeper);
		waitTime(Fsys/20);
	}

	IfxGtm_Tom_Timer_stop(&Beeper);
	waitTime(Fsys/1.53); //End of section 1

	for (i=0; i<9; i++) //Section 2
	{

		PWM_init(PWM_BEEPER, &Beeper, f_sw_2_1[i]);
		PWM_setDuty(Beeper, Duty_Cycle);
		waitTime(Fsys/(len_sw2_1[i]));
		PWM_setDuty(Beeper, 0);
		IfxGtm_Tom_Timer_stop(&Beeper);
		waitTime(Fsys/20);
	}

	IfxGtm_Tom_Timer_stop(&Beeper);
	waitTime(Fsys/2);

	for (i=0; i<7; i++)
	{

		PWM_init(PWM_BEEPER, &Beeper, f_sw_2_2[i]);
		PWM_setDuty(Beeper, Duty_Cycle);
		waitTime(Fsys/(len_sw2_2[i]));
		PWM_setDuty(Beeper, 0);
		IfxGtm_Tom_Timer_stop(&Beeper);
		waitTime(Fsys/20);
	}

	IfxGtm_Tom_Timer_stop(&Beeper);
	waitTime(Fsys/2.86); //End of section 2

	for (i=0; i<8; i++) //Variant 1
	{
		current_freq = f_sw3[i];
		current_len = Fsys/len_sw3[i];

		PWM_init(PWM_BEEPER, &Beeper, f_sw3[i]);
		PWM_setDuty(Beeper, Duty_Cycle);
		waitTime(Fsys/(len_sw3[i]));
		PWM_setDuty(Beeper, 0);
		IfxGtm_Tom_Timer_stop(&Beeper);
		waitTime(Fsys/20);
	}

	IfxGtm_Tom_Timer_stop(&Beeper);
	waitTime(Fsys/2);

	for (i=0; i<9; i++) //Section 2
	{

		PWM_init(PWM_BEEPER, &Beeper, f_sw_2_1[i]);
		PWM_setDuty(Beeper, Duty_Cycle);
		waitTime(Fsys/(len_sw2_1[i]));
		PWM_setDuty(Beeper, 0);
		IfxGtm_Tom_Timer_stop(&Beeper);
		waitTime(Fsys/20);
	}

	IfxGtm_Tom_Timer_stop(&Beeper);
	waitTime(Fsys/2);

	for (i=0; i<7; i++)
	{

		PWM_init(PWM_BEEPER, &Beeper, f_sw_2_2[i]);
		PWM_setDuty(Beeper, Duty_Cycle);
		waitTime(Fsys/(len_sw2_2[i]));
		PWM_setDuty(Beeper, 0);
		IfxGtm_Tom_Timer_stop(&Beeper);
		waitTime(Fsys/20);
	}

	IfxGtm_Tom_Timer_stop(&Beeper);
	waitTime(Fsys/2.86); //End of section 2

	for (i=0; i<9; i++) //Variant 2
	{
		current_freq = f_sw4[i];
		current_len = Fsys/len_sw4[i];

		PWM_init(PWM_BEEPER, &Beeper, f_sw4[i]);
		PWM_setDuty(Beeper, Duty_Cycle);
		waitTime(Fsys/(len_sw4[i]));
		PWM_setDuty(Beeper, 0);
		IfxGtm_Tom_Timer_stop(&Beeper);
		waitTime(Fsys/20);
	}
	IfxGtm_Tom_Timer_stop(&Beeper);
}

/*
 * void Tft_screen_config()
 * Configuration of the Tft screen
 * Initialize the screen and display Title + Infineon logo
 */
void Tft_HBD_Alex()
{
    GLCD_init();//Init the Tft screen
    GLCD_clear(COLOR_WHITE);//Backgound is white
    GLCD_displayStringLn(LINE1, "       HAPPY        ");
    GLCD_displayStringLn(LINE2, "      BIRTHDAY      ");
    GLCD_displayStringLn(LINE2, "        ALEX !      ");
    GLCD_bitmap(100, 16, IFXLOGO_WIDTH, IFXLOGO_HEIGHT, ifxlogo);//display Infineon's Logo at the (100,16) position
}
